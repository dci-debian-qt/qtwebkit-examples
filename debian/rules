#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

DEB_HOST_MULTIARCH ?= $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)

export CFLAGS := $(shell dpkg-buildflags --get CFLAGS) $(shell dpkg-buildflags --get CPPFLAGS)
export CXXFLAGS := $(shell dpkg-buildflags --get CXXFLAGS) $(shell dpkg-buildflags --get CPPFLAGS)
export LDFLAGS := $(shell dpkg-buildflags --get LDFLAGS) -Wl,--as-needed
export QT_SELECT := qt5

%:
	dh $@ --dbg-package=qtwebkit5-examples-dbg --with pkgkde_symbolshelper --parallel

override_dh_auto_configure:
	qmake
	# The build system needs to find the file but doesn't seems to use it later
	# as part of the build process. We create a fake one and will replace it later
	# for the system-provided one.
	touch $(CURDIR)/examples/webkitwidgets/fancybrowser/jquery.min.js

override_dh_auto_clean:
	dh_auto_clean
	rm -rf doc/qtwebkitexamples doc/qtwebkitexamples.qch .qmake.cache

override_dh_auto_build-indep:
	dh_auto_build -Smakefile -- docs

override_dh_auto_install-arch:
	# We will replace the fake jquery.min.js with a symbolic link to a packaged version.
	rm -rf $(CURDIR)/debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)/qt5/examples/webkitwidgets/fancybrowser/jquery.min.js
	dh_auto_install
	find $(CURDIR)/debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)/qt5/examples/ \
		-perm /u+x,g+x,o+x -type f \
                -regex '.*\.\(app\|conf\|cpp\|h\|html\|js\|php\|png\|pro\|xml\|xsl\)$$' \
                -exec chmod a-x {} \;

override_dh_link:
	dh_link -p qtwebkit5-examples /usr/share/javascript/jquery/jquery.min.js \
		usr/lib/$(DEB_HOST_MULTIARCH)/qt5/examples/webkitwidgets/fancybrowser/jquery.min.js

override_dh_auto_install-indep:
	make INSTALL_ROOT=$(CURDIR)/debian/tmp install_docs

override_dh_install:
	dh_install --fail-missing

prune-nonfree:
	# No source code for jquery is shipped.
	rm -fv examples/webkitwidgets/fancybrowser/jquery.min.js
